const { findUserInDB, removeFromUserDB } = require("../db");
const { validateGroup } = require("../db/validators");
const { botAddTime } = require("./botActions");

const onMessage = (bot) => (message) => {
  const chatId = message.from.id;

  if (!bot.tempUsers[chatId]) {
    bot.tempUsers[chatId] = { action: bot.ACTIONS.INIT };
    if (!bot.users[chatId]) {
      bot.tempUsers[chatId].action = bot.ACTIONS.ADDGROUP;
    }
  }

  if (Object.keys(bot.COMMANDS).includes(message.text)) {
    if (message.text === "/start") {
      bot.sendMessage(
        chatId,
        "üëã Welcome!\n\nüéì–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–±—É—á–∞–µ—Ç–µ—Å—å"
      );
    }

    if (message.text === "/unsubscribe") {
      const deleteId = bot.users.find((user) => user.chatId === chatId)?.id;
      if (deleteId)
        removeFromUserDB(deleteId).then(() => {
          bot.sendMessage(
            chatId,
            "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n\nü•≥ –ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start"
          );
        });
    }

    if (message.text === "/info") {
      findUserInDB(chatId).then((data) => {
        if (data)
          bot.sendMessage(
            chatId,
            `üóÇÔ∏è –î–∞–Ω–Ω—ã–µ –æ –≤–∞—à–µ–π —Ä–∞—Å—Å—ã–ª–∫–µ:\n\nüéì –ì—Ä—É–ø–ø–∞: ${data.gp_name}\nüï∞Ô∏è –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${data.timeRemind}\n\nüí° –ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start`
          );
        else {
          bot.sendMessage(
            chatId,
            "üîç –ù–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –∑–∞–Ω–æ–≤–æ!\n\nüéì–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–±—É—á–∞–µ—Ç–µ—Å—å"
          );
        }
      });
    }
  } else {
    switch (bot.tempUsers[chatId].action) {
      case bot.ACTIONS.ADDGROUP:
        const group = validateGroup(bot.groups, message.text);
        if (group) {
          bot.tempUsers[chatId].data = { group: group.gp_name };
          bot.sendMessage(
            chatId,
            "üï∞Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n\nüí° –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ hh:mm, –ø—Ä–∏–º–µ—Ä: 22:20",
            {
              reply_markup: JSON.stringify({
                inline_keyboard: [
                  [
                    {
                      text: "üïò 21:00",
                      callback_data: "21:00",
                    },
                    {
                      text: "üïô 22:00",
                      callback_data: "22:00",
                    },
                    {
                      text: "üïö 23:00",
                      callback_data: "23:00",
                    },
                  ],
                  [
                    {
                      text: "üïï 6:00",
                      callback_data: "6:00",
                    },
                    {
                      text: "üïñ 7:00",
                      callback_data: "7:00",
                    },
                    {
                      text: "üïó 8:00",
                      callback_data: "8:00",
                    },
                  ],
                ],
              }),
            }
          );
          bot.tempUsers[chatId].action = bot.ACTIONS.ADDTIME;
        } else {
          bot.sendMessage(
            chatId,
            "üò≠ –ú—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞—à—É –≥—Ä—É–ø–ø—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
          );
        }
        break;
      case bot.ACTIONS.ADDTIME:
        const time = message.text.match(/\d?\d:\d\d/) || "0:00";
        bot.tempUsers[chatId].data.time =
          time[0].length == 4
            ? `0${time[0]}`
            : time[0].at(0) !== "0" &&
              time[0].at(0) !== "1" &&
              time[0].at(0) !== "2"
            ? `0${time[0].slice(1)}`
            : time[0];
        botAddTime(bot, chatId);
        break;

      default:
        bot.tempUsers[chatId].action = bot.ACTIONS.OTHER;
        break;
    }
  }
};

module.exports = onMessage;
